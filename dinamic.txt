–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–∂–µ—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–æ–∫, —Ñ—Ä–µ–π–º–æ–≤ –∏ —Ç.–¥.) ‚Äî –≤—Å—ë –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ü–∏–∫–ª for, –∏ —Ç—ã –º–æ–∂–µ—à—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.

üîÑ –ü—Ä–∏–º–µ—Ä: —Å–æ–∑–¥–∞—Ç—å N —Ñ—Ä–µ–π–º–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–Ω—É—Ç—Ä–∏
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import customtkinter as ctk


class DynamicUI(ctk.CTk):

    def __init__(self):
        super().__init__()
        self.title("–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –≤–∏–¥–∂–µ—Ç—ã")
        self.geometry("600x600")

        self.container = ctk.CTkScrollableFrame(self)
        self.container.pack(fill="both", expand=True, padx=20, pady=20)

        # –î–æ–ø—É—Å—Ç–∏–º, —É —Ç–µ–±—è –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
        self.widgets_count = 17  # –º–æ–∂–µ—Ç –±—ã—Ç—å 1, 5, 20 ‚Äî –ª—é–±–æ–µ —á–∏—Å–ª–æ

        self.dynamic_blocks = []  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—Ä–µ–π–º—ã, –µ—Å–ª–∏ –Ω–∞–¥–æ

        for i in range(self.widgets_count):
            self.create_block(i)

    def create_block(self, index):
        """–°–æ–∑–¥–∞—ë—Ç –æ–¥–∏–Ω —Ñ—Ä–µ–π–º —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –º–µ—Ç–∫–∞–º–∏"""
        frame = ctk.CTkFrame(self.container)
        frame.pack(padx=10, pady=10, fill="x")

        label = ctk.CTkLabel(frame, text=f"–≠–ª–µ–º–µ–Ω—Ç #{index + 1}")
        label.pack(side="left", padx=10)

        button = ctk.CTkButton(frame, text="–ù–∞–∂–º–∏", command=lambda i=index: self.button_action(i))
        button.pack(side="left", padx=10)

        switch = ctk.CTkSwitch(frame, text="–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å")
        switch.pack(side="left", padx=10)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ—Å—Ç—É–ø –ø–æ–∑–∂–µ
        self.dynamic_blocks.append({
            "frame": frame,
            "label": label,
            "button": button,
            "switch": switch
        })

    def button_action(self, index):
        print(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ {index + 1}")


if __name__ == "__main__":
    ctk.set_appearance_mode("System")
    app = DynamicUI()
    app.mainloop()
üìå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–º–µ—Ä:
–°–æ–∑–¥–∞—ë—Ç 17 —Ñ—Ä–µ–π–º–æ–≤, –∫–∞–∂–¥—ã–π —Å:

–º–µ—Ç–∫–æ–π

–∫–Ω–æ–ø–∫–æ–π

–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é self.widgets_count

–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ ‚Äî –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ, –∫–∞–∫–∞—è –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞

üì¶ –°–æ–≤–µ—Ç—ã:
–ò—Å–ø–æ–ª—å–∑—É–π CTkScrollableFrame, –µ—Å–ª–∏ —Ñ—Ä–µ–π–º–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ.

–°–æ—Ö—Ä–∞–Ω—è–π –≤–∏–¥–∂–µ—Ç—ã –≤ —Å–ø–∏—Å–æ–∫/—Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏ –ø–æ–∑–∂–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ).

–•–æ—á–µ—à—å ‚Äî –ø–æ–∫–∞–∂—É, –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã PostgreSQL.







–í—ã —Å–∫–∞–∑–∞–ª–∏:
–∞ –∫–∞–∫ –ø–æ—Ç–æ–º –ø–æ–Ω—è—Ç—å –∫—É–¥–∞ —á—Ç–æ –ø—Ä–∏—à–ª–æ


ChatGPT —Å–∫–∞–∑–∞–ª:
–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª, –∫–∞–∫–æ–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª—é—á—ë–Ω, –∏–ª–∏ –∫–∞–∫–æ–π —Ñ—Ä–µ–π–º —Å–≤—è–∑–∞–Ω —Å –∫–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ ‚Äî —Ç–µ–±–µ –Ω—É–∂–Ω–æ:

‚úÖ 1. –°–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–∂–µ—Ç—ã –≤ —Ü–∏–∫–ª–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ —Å–ø–∏—Å–æ–∫/—Å–ª–æ–≤–∞—Ä—å
–¢–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º –ø–æ –∏–Ω–¥–µ–∫—Å—É, –∫–ª—é—á—É –∏–ª–∏ ID.

‚úÖ 2. –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ lambda –∏–ª–∏ functools.partial, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å, –∫–∞–∫–∞—è –∏–º–µ–Ω–Ω–æ –∫–Ω–æ–ø–∫–∞/–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å—Ä–∞–±–æ—Ç–∞–ª–∞
üîç –ü–†–ò–ú–ï–†: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏ –ø–æ ID
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import customtkinter as ctk


class SmartUI(ctk.CTk):

    def __init__(self):
        super().__init__()
        self.title("–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        self.geometry("600x600")

        self.container = ctk.CTkScrollableFrame(self)
        self.container.pack(fill="both", expand=True, padx=20, pady=20)

        self.data = [
            {"id": 101, "name": "–ú–æ–¥—É–ª—å A"},
            {"id": 102, "name": "–ú–æ–¥—É–ª—å B"},
            {"id": 103, "name": "–ú–æ–¥—É–ª—å C"},
        ]

        self.widgets = {}  # –∫–ª—é—á: id, –∑–Ω–∞—á–µ–Ω–∏–µ: —Å–ª–æ–≤–∞—Ä—å –≤–∏–¥–∂–µ—Ç–æ–≤

        for item in self.data:
            self.create_block(item)

    def create_block(self, item):
        frame = ctk.CTkFrame(self.container)
        frame.pack(padx=10, pady=10, fill="x")

        label = ctk.CTkLabel(frame, text=item["name"])
        label.pack(side="left", padx=10)

        switch = ctk.CTkSwitch(frame, text="–í–∫–ª/–í—ã–∫–ª")
        switch.pack(side="left", padx=10)

        button = ctk.CTkButton(
            frame,
            text="–ü—Ä–∏–º–µ–Ω–∏—Ç—å",
            command=lambda i=item["id"]: self.on_apply(i)
        )
        button.pack(side="left", padx=10)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã –ø–æ ID
        self.widgets[item["id"]] = {
            "frame": frame,
            "label": label,
            "switch": switch,
            "button": button
        }

    def on_apply(self, id_):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        state = self.widgets[id_]["switch"].get()
        name = self.widgets[id_]["label"].cget("text")

        print(f"[{id_}] {name}: –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å {'–≤–∫–ª—é—á–µ–Ω' if state else '–≤—ã–∫–ª—é—á–µ–Ω'}")


if __name__ == "__main__":
    ctk.set_appearance_mode("System")
    app = SmartUI()
    app.mainloop()
üí° –ß—Ç–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
–£ —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ data, –≤ –Ω—ë–º ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã —Å id –∏ name

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –±–ª–æ–∫ —Å –º–µ—Ç–∫–æ–π, –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π

–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è on_apply(id_), –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç, –∫ –∫–∞–∫–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ

–í—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ self.widgets[id], –∏ —Ç—ã –º–æ–∂–µ—à—å –∫ –Ω–∏–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ ID

üì¶ –ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:
–•—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –±–∞–∑—É)

–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã PostgreSQL

–î–µ–ª–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

–•–æ—á–µ—à—å ‚Äî –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –≤–µ—Ä—Å–∏—é, –≥–¥–µ –±–ª–æ–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—ã –∏–∑ PostgreSQL –∏–ª–∏ CSV.