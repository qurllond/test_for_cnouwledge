üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
–°–æ–∑–¥–∞–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:

–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ https://github.com/new

–ù–∞–∑–æ–≤–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

–£–∫–∞–∂–∏ –æ–ø–∏—Å–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)

–ù–µ —Å—Ç–∞–≤—å –≥–∞–ª–æ—á–∫—É "Initialize this repository with a README" (–µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ)

–ù–∞–∂–º–∏ Create repository

üíª –ù–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ
1. –û—Ç–∫—Ä–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª (–∏–ª–∏ Git Bash, –µ—Å–ª–∏ –Ω–∞ Windows)
2. –ü–µ—Ä–µ–π–¥–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
cd –ø—É—Ç—å/–¥–æ/—Ç–≤–æ–µ–≥–æ/–ø—Ä–æ–µ–∫—Ç–∞
3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ):
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git init
4. –î–æ–±–∞–≤—å –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git add .
5. –°–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git commit -m "–ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç"
6. –°–≤—è–∂–∏ —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º –Ω–∞ GitHub:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git remote add origin https://github.com/–¢–í–û–ô_–õ–û–ì–ò–ù/–ò–ú–Ø_–†–ï–ü–û–ó–ò–¢–û–†–ò–Ø.git
7. –û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª—ã:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git push -u origin master
–ï—Å–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ—Ç–∫—É main, –∞ –Ω–µ master, —Ç–æ–≥–¥–∞:

bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
git push -u origin main
üìù –°–æ–≤–µ—Ç—ã
–î–æ–±–∞–≤—å .gitignore —Ñ–∞–π–ª (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è Python), —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –º—É—Å–æ—Ä –≤—Ä–æ–¥–µ __pycache__/, .vscode/, .env –∏ —Ç.–¥.

–î–æ–±–∞–≤—å README.md —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞.

–•–æ—á–µ—à—å, —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é .gitignore –∏ README.md –¥–ª—è —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞? –ù–∞–ø–∏—à–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç.







–í—ã —Å–∫–∞–∑–∞–ª–∏:
–∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å git bash


ChatGPT —Å–∫–∞–∑–∞–ª:
–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Git Bash, —Å–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:

ü™ü –ï—Å–ª–∏ —Ç—ã –Ω–∞ Windows:
üîπ –í–∞—Ä–∏–∞–Ω—Ç 1: —á–µ—Ä–µ–∑ –ü—É—Å–∫
–ù–∞–∂–º–∏ –ü—É—Å–∫ (–∏–ª–∏ –∫–ª–∞–≤–∏—à—É Win).

–í–≤–µ–¥–∏ Git Bash.

–ö–ª–∏–∫–Ω–∏ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Git Bash.

üîπ –í–∞—Ä–∏–∞–Ω—Ç 2: —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
–ü–µ—Ä–µ–π–¥–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ –ü—Ä–æ–≤–æ–¥–Ω–∏–∫.

–ö–ª–∏–∫–Ω–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø—É—Å—Ç–æ–º—É –º–µ—Å—Ç—É –≤ –ø–∞–ø–∫–µ.

–í—ã–±–µ—Ä–∏ Git Bash Here ‚Äî –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –Ω—É–∂–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

üì• –ï—Å–ª–∏ Git Bash –Ω–µ—Ç:
–°–∫–∞—á–∞–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∏ Git –æ—Ç—Å—é–¥–∞:
üëâ https://git-scm.com/downloads

–ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–µ –º–µ–Ω—è–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∏ —É —Ç–µ–±—è –ø–æ—è–≤–∏—Ç—Å—è Git Bash.












–¥–∞–ª–µ–µ pg admin 
–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ï—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å PostgreSQL —á–µ—Ä–µ–∑ pgAdmin 4, –∏ —Ö–æ—á–µ—à—å:

üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É;

üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Python ‚Äî

–≤–æ—Ç –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è.

‚úÖ 1. –ó–∞–≥—Ä—É–∑–∫–∞ CSV –≤ —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ pgAdmin 4
üìå –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º:
–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –±–∞–∑–∞ –∏ —Ç–∞–±–ª–∏—Ü–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, public.users)

–£ —Ç–µ–±—è –µ—Å—Ç—å CSV-—Ñ–∞–π–ª users.csv

üîπ –®–∞–≥–∏:
–û—Ç–∫—Ä–æ–π pgAdmin 4.

–ù–∞–π–¥–∏ —Å–≤–æ—é —Ç–∞–±–ª–∏—Ü—É:
Servers > Databases > [—Ç–≤–æ—è –ë–î] > Schemas > public > Tables > users

–ü–ö–ú –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ users ‚Üí Import/Export Data...

–í –æ–∫–Ω–µ:

Format: CSV

Filename: –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π CSV-—Ñ–∞–π–ª

Encoding: UTF8

Header: ‚úî (–µ—Å–ª–∏ –≤ CSV –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏)

Delimiter: , (–∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)

Import: ‚úî

–ù–∞–∂–º–∏ OK ‚Äî –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è.

‚úÖ –í—Å—ë! –î–∞–Ω–Ω—ã–µ CSV —Ç–µ–ø–µ—Ä—å –≤ PostgreSQL.

‚úÖ 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ PostgreSQL –∫ Python
–£—Å—Ç–∞–Ω–æ–≤–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É psycopg2:
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
pip install psycopg2-binary
–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import psycopg2

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
conn = psycopg2.connect(
    dbname="–∏–º—è_–±–¥",
    user="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
    password="–ø–∞—Ä–æ–ª—å",
    host="localhost",  # –∏–ª–∏ IP —Å–µ—Ä–≤–µ—Ä–∞
    port="5432"
)

# –ö—É—Ä—Å–æ—Ä
cur = conn.cursor()

# –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞
cur.execute("SELECT * FROM users")
rows = cur.fetchall()

for row in rows:
    print(row)

# –ó–∞–∫—Ä—ã—Ç–∏–µ
cur.close()
conn.close()
üí° –°–æ–≤–µ—Ç—ã:
–£–±–µ–¥–∏—Å—å, —á—Ç–æ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Ç—ã –∑–Ω–∞–µ—à—å –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å.

–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å, –∫–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–≤–æ—è –ë–î, –æ—Ç–∫—Ä–æ–π –µ—ë –≤ pgAdmin ‚Üí —Å–≤–µ—Ä—Ö—É –±—É–¥–µ—Ç –∏–º—è.

CSV –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ç–∏–ø—ã –∫–æ–ª–æ–Ω–æ–∫).

–•–æ—á–µ—à—å, —è –ø–æ–º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ –ø–æ–¥ —Ç–≤–æ–π —Ñ–∞–π–ª –∏ —Ç–∞–±–ª–∏—Ü—É? –ú–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –∏ –ø—Ä–∏–º–µ—Ä CSV.







–í—ã —Å–∫–∞–∑–∞–ª–∏:
—Å–¥–µ–ª–∞–π –ø–∏–º–µ—Ä –∫–∞–∫ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≤—Å—é —Ç–∞–±–ª–∏—Ü—É –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å—é —Ç–∞–±–ª–∏—Ü—É


ChatGPT —Å–∫–∞–∑–∞–ª:
–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –ø–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–∏–º–µ—Ä –Ω–∞ Python, –∫–æ—Ç–æ—Ä—ã–π:

üîó –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –±–∞–∑–µ PostgreSQL

üì• –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å—é —Ç–∞–±–ª–∏—Ü—É users

üìÑ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ—ë –≤ CSV-—Ñ–∞–π–ª users_dump.csv —Å –ø–æ–º–æ—â—å—é pandas

‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω—É–∂–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (–µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç)
bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
pip install psycopg2-binary pandas
üêç –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import psycopg2
import pandas as pd

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
conn = psycopg2.connect(
    dbname="your_db_name",     # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –ë–î
    user="your_username",      # ‚Üê –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    password="your_password",  # ‚Üê –ø–∞—Ä–æ–ª—å
    host="localhost",          # ‚Üê –∏–ª–∏ IP —Å–µ—Ä–≤–µ—Ä–∞
    port="5432"                # ‚Üê —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PostgreSQL
)

# –ó–∞–ø—Ä–æ—Å –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã
query = "SELECT * FROM users"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ DataFrame
df = pd.read_sql(query, conn)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
print(df.head())

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
df.to_csv("users_dump.csv", index=False)

# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
conn.close()
üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
python-repl
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
   id    name  age
0   1  –ö–∏—Ä–∏–ª–ª   22
1   2   –ê–Ω–Ω–∞    30
...
üì• –ß—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ:
CSV-—Ñ–∞–π–ª users_dump.csv —Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º.

–¢–∞–±–ª–∏—Ü–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî –∏ –≤ –ø–∞–º—è—Ç–∏, –∏ –≤ —Ñ–∞–π–ª.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —è —Å–¥–µ–ª–∞—é —Ç–∞–∫–æ–π –∂–µ –ø—Ä–∏–º–µ—Ä, –Ω–æ –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É ‚Äî —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å CSV –≤ PostgreSQL.







–í—ã —Å–∫–∞–∑–∞–ª–∏:
–∞ –∫–∞–∫ –∏–∑ –ø–∏—Ç–æ–Ω–∞ —Ç—É–¥–∞ –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å


ChatGPT —Å–∫–∞–∑–∞–ª:
–û—Ç–ª–∏—á–Ω–æ! –°–µ–π—á–∞—Å –ø–æ–∫–∞–∂—É, –∫–∞–∫ –∏–∑ Python –∑–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª –≤ —Ç–∞–±–ª–∏—Ü—É PostgreSQL ‚Äî —Å –ø–æ–º–æ—â—å—é pandas –∏ psycopg2.

‚úÖ –ß—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:
üìÑ CSV-—Ñ–∞–π–ª ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: users.csv

üéØ –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ PostgreSQL (–Ω–∞–ø—Ä–∏–º–µ—Ä, users)

üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:

bash
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
pip install pandas psycopg2-binary
üêç –ü—Ä–∏–º–µ—Ä: –∑–∞–≥—Ä—É–∑–∫–∞ CSV –≤ PostgreSQL
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import psycopg2
import pandas as pd

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV –≤ DataFrame
df = pd.read_csv('users.csv')  # –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–æ–º –∂–µ –∫–∞—Ç–∞–ª–æ–≥–µ

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
conn = psycopg2.connect(
    dbname="your_db_name",
    user="your_username",
    password="your_password",
    host="localhost",
    port="5432"
)

# –°–æ–∑–¥–∞—ë–º –∫—É—Ä—Å–æ—Ä
cur = conn.cursor()

# –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ DataFrame –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –æ–¥–Ω–æ–π
for _, row in df.iterrows():
    cur.execute(
        "INSERT INTO users (name, age) VALUES (%s, %s)",
        (row['name'], row['age'])
    )

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
conn.commit()

# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
cur.close()
conn.close()

print("CSV –∑–∞–≥—Ä—É–∂–µ–Ω –≤ PostgreSQL!")
üìñ –ß—Ç–µ–Ω–∏–µ CSV-—Ñ–∞–π–ª–∞
‚úÖ –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ csv.reader
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import csv

with open('users.csv', newline='', encoding='utf-8') as file:
    reader = csv.reader(file)
    for row in reader:
        print(row)
–í—ã–≤–æ–¥: —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è ‚Äî —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å—Ç—Ä–æ–∫–∏ CSV.

‚úÖ –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ csv.DictReader ‚Äî —É–¥–æ–±–Ω–æ, –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import csv

with open('users.csv', newline='', encoding='utf-8') as file:
    reader = csv.DictReader(file)
    for row in reader:
        print(row['name'], row['age'])  # –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å—Ç–æ–ª–±—Ü–∞
‚úçÔ∏è –ó–∞–ø–∏—Å—å –≤ CSV-—Ñ–∞–π–ª
‚úÖ –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ csv.writer
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import csv

with open('new_users.csv', mode='w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    writer.writerow(['name', 'age'])

    # –î–∞–Ω–Ω—ã–µ
    writer.writerow(['–ö–∏—Ä–∏–ª–ª', 22])
    writer.writerow(['–ê–Ω–Ω–∞', 30])
‚úÖ –°–ø–æ—Å–æ–± 2: csv.DictWriter ‚Äî —É–¥–æ–±–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–æ —Å–ª–æ–≤–∞—Ä—è–º–∏
python
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import csv

with open('new_users.csv', mode='w', newline='', encoding='utf-8') as file:
    fieldnames = ['name', 'age']
    writer = csv.DictWriter(file, fieldnames=fieldnames)

    writer.writeheader()
    writer.writerow({'name': '–ö–∏—Ä–∏–ª–ª', 'age': 22})
    writer.writerow({'name': '–ê–Ω–Ω–∞', 'age': 30})